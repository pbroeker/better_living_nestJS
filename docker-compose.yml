version: '3.7'
services:
  db:
    container_name: siegenia-db
    hostname: dev|siegenia-db
    image: postgres
    restart: always
    logging:
      driver: none
    environment: 
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - intern
  nestjs:
    container_name: siegenia-api
    hostname: dev|siegenia-api
    image: siegenia-api
    build: 
      context: .
      dockerfile: ./Dockerfile
    environment: 
      - DB_TYPE=${DB_TYPE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - APP_PORT=${APP_PORT}
    command: yarn run start:staging
    ports: 
      - 3030:3000
    networks:
      - intern
      - extern
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - traefik.docker.network=extern
      - "traefik.http.routers.siegapi.entrypoints=http"
      - "traefik.http.routers.siegapi.rule=Host(`staging-siegenia-api.mobile-software.ag`)"
      - "traefik.http.routers.siegapi.middlewares=https-redirect@file"
      #
      - "traefik.http.routers.siegapi-sec.entrypoints=https"
      - "traefik.http.routers.siegapi-sec.rule=Host(`staging-siegenia-api.mobile-software.ag`)"
      - "traefik.http.routers.siegapi-sec.tls=true"
      - "traefik.http.routers.siegapi-sec.tls.options=myTLSOptions@file"
      - "traefik.http.routers.siegapi-sec.tls.certresolver=le"
networks:
  intern:
    external: true
  extern:
    external: true